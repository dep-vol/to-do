{"version":3,"sources":["components/Header/header.module.css","components/ToDosList/ToDosList.js","components/Header/Header.js","components/ToDoList/ToDoList.js","components/AddForm/AddForm.js","Api/Api.js","Context/UserContext.js","components/App/App.js","components/Registration/RegistrationInput.js","components/Authorize/Authorize.js","components/Registration/Registration.js","index.js"],"names":["module","exports","ToDosList","this","props","toDosList","hide","loadList","user","logout","hiddenStyle","show","toDoListItems","map","item","className","onClick","key","onMouseLeave","Component","Header","state","togglePopup","showState","setState","hidePopup","total","doneItemsCount","onLoadList","styles","head","mainrow","tog","aria-hidden","listCounter","ToDoList","inpValue","checkComplete","done","changeName","name","includes","listItems","deleteItem","complete","listName","toDoList","i","id","title","save","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","AddForm","inpChange","onAddItem","addItem","disabled","checkCorsHost","host","a","fetch","method","headers","body","JSON","stringify","response","ok","Api","BASE_URL","apiError","apiMsg","loadToDoList","then","json","catch","error","message","saveToDo","text","Error","register","form","formData","FormData","console","checkUsernameExist","nickname","res","checkUserMailExist","mail","login","checkUserPass","password","getLoggedUser","data","UserContext","React","createContext","UserProvider","Provider","Consumer","App","apiConnect","userStorage","parse","localStorage","getItem","toDos","toDoName","popup","loggedUser","onToggleDone","idx","findIndex","el","oldItem","onDelete","splice","toDoItem","length","push","onChangeToDoName","onSave","onError","onSuccess","loadSavedLists","setTimeout","closeError","onLogOut","context","logIn","clear","isLogged","to","filter","style","opacity","contextType","RegistrationInput","forwardRef","ref","useState","inputValue","setInputValue","validateType","validateCallback","label","onEnter","htmlFor","status","onBlur","onKeyPress","msg","Authorize","useContext","input","pass","userLogin","setUserLogin","btnStatus","setBtnStatus","btnRef","useRef","passwRef","checkUserLogin","inputName","callback","params","newUserValidate","useEffect","current","focus","setItem","history","Registration","userValidate","setUserValidate","registered","setRegistered","formRef","createRef","mailRef","passRef","passRepeatRef","checkUserExist","ReactDOM","render","path","component","exact","document","getElementById"],"mappings":"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","file":"static/js/main.aa2cec5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"header_head__2Yzzy\",\"mainrow\":\"header_mainrow__30h4F\",\"listCounter\":\"header_listCounter__1W6rT\",\"tog\":\"header_tog__26H1Q\",\"user\":\"header_user__LBWH_\"};","import React, {Component} from 'react';\r\nimport './ToDosList.css';\r\n\r\nclass ToDosList extends Component {\r\n\r\n  render() {\r\n    const { toDosList, hide, loadList, user, logout } = this.props;\r\n    const hiddenStyle = this.props.show === false ? 'hidden' : '';\r\n    const toDoListItems = toDosList.map((item) => {\r\n      return (\r\n        <li className=\"\" onClick={()=>loadList(user,item)} key={item}>{item}</li>\r\n      )\r\n    });\r\n    return (\r\n      <div className={`mainList ${hiddenStyle}`} onMouseLeave={hide}>\r\n        <h5 className=\"text-center\">Saved lists:</h5>\r\n        <ul>\r\n          {toDoListItems}\r\n        </ul>\r\n        <span className=\"badge  badge-primary\" onClick={logout}>Log out</span>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDosList;","import React, { Component } from 'react';\r\nimport styles from './header.module.css';\r\nimport ToDosList from \"../ToDosList/ToDosList\";\r\n\r\nexport default class Header extends Component {\r\n  state = {\r\n    show: false\r\n  };\r\n\r\n  togglePopup = () => {\r\n    const showState = !this.state.show;\r\n    this.setState({show:showState})\r\n  };\r\n  hidePopup = () => {\r\n    this.setState({show:false})\r\n  };\r\n    render() {\r\n      const { total, doneItemsCount, toDosList, onLoadList, user, logout } = this.props;\r\n        return (\r\n            <div className={`container-fluid ${styles.head}`}>\r\n                <div className={`row ${styles.mainrow}`}>\r\n                    <div className='col'>\r\n                        <h1 className='text-center'>ToDo-application</h1>\r\n                    </div>\r\n                </div>\r\n              <div className=\"row\">\r\n                <div className={`col ${styles.user}`}>\r\n                  <div className={styles.tog}>\r\n                      <div>{`${user} :`}</div>\r\n                      <i className=\"fa fa-bars\" aria-hidden=\"true\" onClick={this.togglePopup}/>\r\n                      <ToDosList show={this.state.show}\r\n                                 toDosList={toDosList}\r\n                                 hide={this.hidePopup}\r\n                                 loadList = {onLoadList}\r\n                                 user = {user}\r\n                                 logout = {logout}\r\n                      />\r\n                  </div>\r\n\r\n\r\n                </div>\r\n\r\n                <div className=\"col\">\r\n                  <ul className={styles.listCounter}>\r\n                    <li>Uncompleted <span className=\"badge badge-primary\">{total-doneItemsCount}</span></li>\r\n                    <li>Completed <span className=\"badge badge-primary\">{doneItemsCount}</span></li>\r\n                    <li>Total to-dos <span className=\"badge badge-primary\">{total}</span></li>\r\n                  </ul>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './ToDoList.css';\r\n\r\nexport default class ToDoList extends Component {\r\n  state = {\r\n    show: false,\r\n    inpValue: ''\r\n  };\r\n\r\n  checkComplete = (item) => {\r\n    if (item.done) {\r\n      return 'itemDone'\r\n    }\r\n    else return ''\r\n  };\r\n  togglePopup = () => {\r\n    const showState = !this.state.show;\r\n    this.setState({show:showState})\r\n  };\r\n\r\n  changeName = (name) => {\r\n    if (!this.props.toDosList.includes(name)){\r\n      this.props.changeName(name);\r\n      this.togglePopup()\r\n    }\r\n    else {\r\n\r\n    }\r\n  };\r\n\r\n    render() {\r\n        const { listItems, deleteItem, complete, listName } = this.props;\r\n\r\n        const toDoList = listItems.map((item,i) => {\r\n            return (\r\n              <li className={`list-group-item ${this.checkComplete(item)}`} key={item.id+'item'}>\r\n                  {`${i+1}. ${item.title}`}\r\n                  <i className={`fa fa-check ${this.checkComplete(item)}`} aria-hidden=\"true\" onClick={() => complete(item.id)}/>\r\n                  <i className=\"fa fa-trash-o\" aria-hidden=\"true\" onClick={()=>deleteItem(item.id)}/>\r\n              </li>\r\n            )\r\n        });\r\n\r\n        const hiddenStyle = this.state.show === false ? 'hidden' : '';\r\n\r\n\r\n        return (\r\n\r\n          <div className='container-fluid'>\r\n            <div className='row mt-3 mb-3'>\r\n              <div className='col'>\r\n                <h3 className='text-center'>\r\n                  {listName===''? 'Unnamed list' : listName}:\r\n                  <sup><i className=\"fa fa-pencil-square-o fa-edit\" aria-hidden=\"true\" onClick={this.togglePopup} /></sup>\r\n                  <sup><i className=\"fa fa-floppy-o fa-edit\" aria-hidden=\"true\" onClick={this.props.save} /></sup>\r\n                </h3>\r\n              </div>\r\n            </div>\r\n            <div className={`row center ${hiddenStyle}`}>\r\n              <form className=\"form-inline row addInput\" onSubmit={(e)=>e.preventDefault()}>\r\n                <div className=\"form-group\">\r\n                  <input type=\"text\"\r\n                         className=\"form-control\"\r\n                         placeholder=\"Please, type new title\"\r\n                         value={this.state.inpValue}\r\n                         onChange={(e)=>{this.setState({inpValue:e.target.value})}}\r\n                  />\r\n                  <button className=\"btn btn-self\" onClick={() => this.changeName(this.state.inpValue)}>Rename</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className='row center'>\r\n              <div className='col-5'>\r\n                <ul className=\"list-group\">\r\n                  {toDoList}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport './AddForm.css';\r\n\r\nclass AddForm extends Component {\r\n  state = {\r\n    inpValue : ''\r\n  };\r\n\r\n  inpChange = (e) => {\r\n    const inpValue = e.target.value;\r\n    if(inpValue!==''||inpValue!==null) {\r\n      this.setState({inpValue});\r\n    }\r\n    else {\r\n      return null\r\n    }\r\n  };\r\n  onAddItem = () => {\r\n      this.props.addItem(this.state.inpValue)\r\n  };\r\n\r\n  render() {\r\n    const { inpValue } = this.state;\r\n    return (\r\n      <form className=\"form-inline row addInput\" onSubmit={(e)=>e.preventDefault()}>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\"\r\n                 className=\"form-control\"\r\n                 placeholder=\"Please, type toDo\"\r\n                 value={inpValue}\r\n                 onChange={this.inpChange}\r\n          />\r\n          <button className=\"btn btn-self\" onClick={this.onAddItem} disabled={inpValue === ''}>Add</button>\r\n        </div>\r\n      </form>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddForm;","const checkCorsHost = async (host) => {\r\n  const response = await fetch(\r\n    `https://thingproxy.freeboard.io/fetch/${host}/save.php`,\r\n    {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify({}),\r\n    }\r\n  );\r\n  return response.ok;\r\n};\r\n\r\nclass Api {\r\n  host = checkCorsHost(\"https://market-try.000webhostapp.com/api\")\r\n    ? \"https://market-try.000webhostapp.com/api/\"\r\n    : checkCorsHost(\"http://f0442974.xsph.ru\")\r\n    ? \"http://f0442974.xsph.ru/\"\r\n    : null;\r\n  BASE_URL = `https://thingproxy.freeboard.io/fetch/${this.host}`;\r\n  apiError = \"\";\r\n  apiMsg = \"\";\r\n\r\n  loadToDoList = (user) => {\r\n    return fetch(`${this.BASE_URL}load.php?data=${user}`)\r\n      .then((response) => response.json())\r\n      .catch((error) => (this.apiError = error.message));\r\n  };\r\n\r\n  loadList = (user, name) => {\r\n    return fetch(`${this.BASE_URL}load.php?data=${user}&list=${name}`)\r\n      .then((response) => response.json())\r\n      .catch((error) => (this.apiError = error.message));\r\n  };\r\n\r\n  saveToDo = (body) => {\r\n    return fetch(`${this.BASE_URL}save.php`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    })\r\n      .then((response) => response.text())\r\n      .then((text) => {\r\n        this.apiMsg = text;\r\n        if (text === \"\") throw new Error(\"Error on server please try later\");\r\n      })\r\n      .catch((error) => (this.apiError = error.message));\r\n  };\r\n\r\n  register = (form) => {\r\n    let formData = new FormData(form);\r\n    fetch(`${this.BASE_URL}reg.php`, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    })\r\n      .then((response) => response.text())\r\n      .then((text) => {\r\n        this.apiMsg = text;\r\n        if (text === \"\") throw new Error(\"Error on server please try later\");\r\n      })\r\n      .catch((error) => console.error(error));\r\n  };\r\n\r\n  checkUsernameExist = (nickname) => {\r\n    return fetch(`${this.BASE_URL}reg.php?nick=${nickname}`)\r\n      .then((res) => res.text())\r\n      .then((text) => {\r\n        if (text === \"TRUE\")\r\n          throw new Error(`User with nickname ${nickname} is already exist`);\r\n      })\r\n      .catch((error) => error.message);\r\n  };\r\n\r\n  checkUserMailExist = (mail, login) => {\r\n    return fetch(`${this.BASE_URL}reg.php?mail=${mail}`)\r\n      .then((res) => res.text())\r\n      .then((text) => {\r\n        if (text === \"TRUE\") {\r\n          if (login === \"login\") return \"ok\";\r\n          else throw new Error(`User with E-mail ${mail} is already exist`);\r\n        } else {\r\n          if (login)\r\n            return `User with E-mail ${mail} does not exist. Please register`;\r\n        }\r\n      })\r\n\r\n      .catch((error) => error.message);\r\n  };\r\n\r\n  checkUserPass = (password, mail) => {\r\n    return fetch(`${this.BASE_URL}reg.php?mail=${mail}&pass=${password}`)\r\n      .then((res) => res.text())\r\n      .then((text) => {\r\n        if (text === \"TRUE\") return \"ok\";\r\n        else return `Password or Email does not correct`;\r\n      })\r\n      .catch((error) => error.message);\r\n  };\r\n\r\n  getLoggedUser = (mail) => {\r\n    return fetch(`${this.BASE_URL}reg.php?mail=${mail}&getU=true`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        return data;\r\n      })\r\n      .catch((error) => error.message);\r\n  };\r\n}\r\n\r\nexport default Api;\r\n","import React from \"react\";\r\n\r\nclass LoggedUser {\r\n    isLogged = false;\r\n    logIn = () => {\r\n        this.isLogged = !this.isLogged\r\n    };\r\n}\r\nconst UserContext = React.createContext({});\r\nconst UserProvider = UserContext.Provider;\r\nconst UserConsumer = UserContext.Consumer;\r\n\r\nexport { UserContext, UserProvider, UserConsumer, LoggedUser}\r\n\r\n","import React from 'react';\r\nimport Header from '../Header/Header';\r\nimport ToDoList from '../ToDoList/ToDoList';\r\nimport AddForm from \"../AddForm/AddForm\";\r\nimport Api from \"../../Api/Api\";\r\nimport './App.css';\r\nimport {UserContext} from \"../../Context/UserContext\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass App extends React.Component {\r\n  apiConnect = new Api();\r\n  static contextType = UserContext;\r\n  userStorage = JSON.parse(localStorage.getItem('user'));\r\n\r\n  state = {\r\n    toDos:[],\r\n    toDoName:'',\r\n    toDosList:[],\r\n    popup:{\r\n      title: '',\r\n      show: false,\r\n      type:''\r\n    },\r\n    loggedUser:{\r\n      name:''\r\n    }\r\n  };\r\n  onToggleDone = (id) => {\r\n    const toDos = [...this.state.toDos];\r\n    const idx = toDos.findIndex((el) => el.id===id);\r\n    const oldItem = {...toDos[idx]};\r\n    toDos[idx] = {...oldItem,done:!oldItem.done};\r\n    this.setState({toDos})\r\n  };\r\n  onDelete = (id) => {\r\n    const toDos = [...this.state.toDos];\r\n    const idx = toDos.findIndex((el) => el.id===id);\r\n    toDos.splice(idx,1);\r\n    this.setState({toDos})\r\n  };\r\n  onAddItem = (title) => {\r\n    const toDos = [...this.state.toDos];\r\n    const itemsCount = toDos.length;\r\n    const toDoItem = {id:itemsCount+1, title, done:false};\r\n    toDos.push(toDoItem);\r\n    this.setState({toDos})\r\n  };\r\n  onChangeToDoName = (name) => {\r\n    this.setState({toDoName:name})\r\n  };\r\n  loadSavedLists (user) {\r\n    this.apiConnect.loadToDoList(user).then(\r\n      (data) => {\r\n        if (data === null) return;\r\n\r\n        if(this.apiConnect.apiError!==''){\r\n          this.onError(true,this.apiConnect.apiError)\r\n        }\r\n        else{\r\n          this.setState({toDosList:data})\r\n        }\r\n\r\n      });\r\n  }\r\n  onSave = () => {\r\n    const body = {\r\n      toDos: [...this.state.toDos],\r\n      name: this.state.toDoName,\r\n      user: this.state.loggedUser.name\r\n    };\r\n   if (body.name !==''){\r\n     this.apiConnect.saveToDo(body).then(() =>{\r\n       if(this.apiConnect.apiError!==''){\r\n         this.onError(true,this.apiConnect.apiError)\r\n       }\r\n       else {\r\n         this.onSuccess(true,this.apiConnect.apiMsg);\r\n         this.loadSavedLists(this.userStorage.nickname)\r\n       }\r\n     })\r\n   }\r\n   else {\r\n     const error = 'Please choose a name of the list';\r\n     this.onError(true,error);\r\n\r\n   }\r\n  };\r\n  onError = (show,title = this.state.popup.title) => {\r\n    const error = {...this.state.popup};\r\n    error.title = title;\r\n    error.show = show;\r\n    error.type = 'error';\r\n    this.setState({popup:error});\r\n    setTimeout(()=>this.closeError(),2500)\r\n  };\r\n  onSuccess = (show,title) => {\r\n    const popup = {...this.state.popup};\r\n    popup.title = title;\r\n    popup.show = show;\r\n    popup.type = 'Success!';\r\n    this.setState({popup});\r\n    setTimeout(()=>this.closeError(),2500)\r\n  };\r\n  loadList = (user,name) => {\r\n    this.apiConnect.loadList(user,name).then((json) => {\r\n      if(this.apiConnect.apiError!==''){\r\n        this.onError(true,this.apiConnect.apiError)\r\n      }\r\n      else {\r\n        this.setState({\r\n          toDos:json.toDos,\r\n          toDoName:json.name\r\n        })\r\n      }\r\n\r\n    })\r\n  };\r\n  closeError = () => {\r\n    const error = {...this.state.popup};\r\n    error.show = false;\r\n    this.setState({popup:error})\r\n  };\r\n  onLogOut = () => {\r\n    this.context.logIn();\r\n    localStorage.clear();\r\n    this.setState({...this.state,loggedUser:{name:''}})\r\n  };\r\n\r\n  componentDidMount() {\r\n   if(this.context.isLogged || this.userStorage){\r\n     this.setState(()=> {\r\n      return {...this.state,loggedUser:{...this.state.loggedUser,name:this.userStorage.nickname}}\r\n     });\r\n     this.loadSavedLists(this.userStorage.nickname);\r\n   }\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    let style = {\r\n      opacity:1\r\n    };\r\n\r\n    const { toDos, toDoName, toDosList, popup } = this.state;\r\n\r\n    if(this.state.loggedUser.name === '') {\r\n      return (\r\n          <div className='d-flex flex-column justify-content-center align-items-center logIn'>\r\n            <h3>Please logIn!</h3>\r\n            <Link to='/'>\r\n              Go to authorization page\r\n            </Link>\r\n          </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className='row'>\r\n          <Header total={toDos.length}\r\n                  doneItemsCount={toDos.filter((el) => el.done === true).length}\r\n                  toDosList={toDosList}\r\n                  onLoadList={this.loadList}\r\n                  user={this.state.loggedUser.name}\r\n                  logout = {this.onLogOut}\r\n\r\n          />\r\n          <ToDoList listItems={toDos}\r\n                    deleteItem={this.onDelete}\r\n                    complete={this.onToggleDone}\r\n                    listName={toDoName}\r\n                    changeName={this.onChangeToDoName}\r\n                    save={this.onSave}\r\n                    toDosList={toDosList}\r\n          />\r\n          <AddForm addItem={this.onAddItem}/>\r\n\r\n        </div>\r\n        <div className={'hideError'} style={!popup.show ? {} : style}>\r\n          <h3>{popup.type}</h3>\r\n          <p className='text-muted font-italic'>{popup.title}</p>\r\n          <i className=\"fa fa-times closeI\" aria-hidden=\"true\" onClick={this.closeError}/>\r\n\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","import React, {useState} from 'react';\r\n\r\n\r\nconst RegistrationInput = React.forwardRef( (props, ref) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const {validateType, validateCallback, type, name, label, onEnter} = props;\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input type={type}\r\n                   name={name}\r\n                   value={inputValue}\r\n                   className={`form-control ${validateType.status}`}\r\n                   onChange={(e) => setInputValue(e.target.value)}\r\n                   onBlur={()=>validateCallback(inputValue)}\r\n                   onKeyPress={(e)=>{\r\n                       if(e.key==='Enter') {\r\n                           validateCallback(inputValue);\r\n                           onEnter();\r\n                       }\r\n                   }}\r\n                   ref={ref}\r\n            />\r\n            <div className=\"invalid-feedback\">\r\n                {validateType.msg}\r\n            </div>\r\n            <div className=\"valid-feedback\">\r\n                Looks good!\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default RegistrationInput;","import React, {useContext, useEffect, useState, useRef} from \"react\";\r\nimport './Authorize.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport RegistrationInput from \"../Registration/RegistrationInput\";\r\nimport Api from \"../../Api/Api\";\r\nimport {UserContext} from \"../../Context/UserContext\";\r\n\r\nconst apiConnect = new Api();\r\n\r\nconst Authorize = (props) => {\r\n  const user = useContext(UserContext);\r\n\r\n  const [userLogin, setUserLogin] = useState({\r\n    mail : {\r\n      input: '',\r\n      status: '',\r\n      msg: ''\r\n    },\r\n    pass : {\r\n      status: '',\r\n      msg: ''\r\n    }\r\n  });\r\n  const [btnStatus, setBtnStatus] = useState(true);\r\n\r\n  const btnRef = useRef(null);\r\n  const passwRef = useRef(null);\r\n\r\n  const checkUserLogin = (inputName, callback, inputValue, params) => {\r\n    callback(inputValue,...params).then((res) => {\r\n\r\n      if (res === 'ok') {\r\n        const newUserValidate = {...userLogin[inputName], status:'is-valid', input:inputValue};\r\n        setUserLogin({...userLogin, [inputName]: newUserValidate})\r\n      }\r\n      else  {\r\n        const newUserValidate = {...userLogin[inputName], status:'is-invalid',  msg:res, input:inputValue};\r\n        setUserLogin({...userLogin, [inputName]: newUserValidate, pass:{status: '',\r\n            msg: ''}})\r\n      }\r\n      if (inputValue === '') {\r\n        const newUserValidate = {...userLogin[inputName], status:''};\r\n        setUserLogin({...userLogin, [inputName]: newUserValidate})\r\n      }\r\n    });\r\n  };\r\n  const checkCompleted = () => {\r\n    if((userLogin.mail.status ==='is-valid') && (userLogin.pass.status ==='is-valid')) {\r\n      setBtnStatus(false)\r\n    }\r\n    else setBtnStatus(true)\r\n  };\r\n  const onSubmit = () => {\r\n    apiConnect.getLoggedUser(userLogin.mail.input)\r\n        .then ((res) => {\r\n          localStorage.setItem('user', JSON.stringify(res));\r\n          user.logIn();\r\n          props.history.push('/main')\r\n        })\r\n  };\r\n  \r\n\r\n  useEffect(()=>checkCompleted());\r\n\r\n  return (\r\n    <div className='d-flex flex-column justify-content-center align-items-center auth'>\r\n      <form>\r\n        <RegistrationInput validateType={userLogin.mail}\r\n                           validateCallback={(inputValue)=>checkUserLogin('mail',apiConnect.checkUserMailExist,inputValue,['login'])}\r\n                           type='email'\r\n                           name='email'\r\n                           label='Email address'\r\n                           onEnter={() => passwRef.current.focus()}\r\n        />\r\n        <RegistrationInput validateType={userLogin.pass}\r\n                           validateCallback={(inputValue)=>checkUserLogin('pass',apiConnect.checkUserPass,inputValue,[userLogin.mail.input])}\r\n                           type='password'\r\n                           name='password'\r\n                           label='Password'\r\n                           ref={passwRef}\r\n                           onEnter={() => btnRef.current.focus()}\r\n        />\r\n\r\n\r\n        <button type=\"button\" className=\"btn btn-primary\" disabled={btnStatus} onClick={onSubmit} ref={btnRef}>Log in</button>\r\n        <div>\r\n          <small className=\"form-text text-muted\">If we don`t registered yet. Please<Link to='/registration'> click to register</Link></small>\r\n        </div>\r\n\r\n      </form>\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Authorize;\r\n","import React, {useEffect, useState} from 'react';\r\nimport Api from \"../../Api/Api\";\r\nimport RegistrationInput from \"./RegistrationInput\";\r\nconst apiConnect = new Api();\r\n\r\nconst Registration = (props) => {\r\n\r\n//STATE\r\n    const [userValidate, setUserValidate] = useState({\r\n        nickname : {\r\n            status: '',\r\n            msg: '',\r\n            input: ''\r\n        },\r\n        mail : {\r\n            status: '',\r\n            msg: '',\r\n            input: ''\r\n        },\r\n        pass : {\r\n            status: '',\r\n            msg: '',\r\n            input: ''\r\n        }\r\n    });\r\n    const [btnStatus, setBtnStatus] = useState(true);\r\n    const [registered, setRegistered] = useState(false);\r\n\r\n//REFS\r\n    const formRef = React.createRef();\r\n    const mailRef = React.createRef();\r\n    const passRef = React.createRef();\r\n    const passRepeatRef = React.createRef();\r\n    const btnRef = React.createRef();\r\n//\r\n\r\n//LISTENERS\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        apiConnect.register(formRef.current);\r\n        setRegistered(true);\r\n        setTimeout(() => props.history.push('/'),2000)\r\n    };\r\n\r\n    const checkUserExist = (inputName, callback, inputValue) => {\r\n        callback(inputValue).then((res) => {\r\n\r\n            if (res) {\r\n                const newUserValidate = {...userValidate[inputName], status:'is-invalid', msg:res};\r\n                setUserValidate({...userValidate, [inputName]: newUserValidate})\r\n            }\r\n            else  {\r\n                const newUserValidate = {...userValidate[inputName], status:'is-valid', input:inputValue, msg:''};\r\n                setUserValidate({...userValidate, [inputName]: newUserValidate})\r\n            }\r\n            if (inputValue === '') {\r\n                const newUserValidate = {...userValidate[inputName], status:''};\r\n                setUserValidate({...userValidate, [inputName]: newUserValidate})\r\n            }\r\n        });\r\n    };\r\n\r\n    const onPassEnter = (inputValue) => {\r\n        const newUserValidate = {...userValidate.pass, status:'', input:inputValue};\r\n        setUserValidate({...userValidate, pass: newUserValidate})\r\n    };\r\n\r\n    const passCheck = (inputValue) => {\r\n        if (inputValue === userValidate.pass.input) {\r\n            const newUserValidate = {...userValidate.pass, status:'is-valid'};\r\n            setUserValidate({...userValidate, pass: newUserValidate})\r\n        }\r\n        else {\r\n            const newUserValidate = {...userValidate.pass, status:'is-invalid', msg:'Password is not similar'};\r\n            setUserValidate({...userValidate, pass: newUserValidate})\r\n        }\r\n    };\r\n\r\n    const checkCompleted = () => {\r\n        if((userValidate.nickname.status ==='is-valid') && (userValidate.mail.status ==='is-valid') && (userValidate.pass.status ==='is-valid')) {\r\n            setBtnStatus(false)\r\n        }\r\n        else setBtnStatus(true)\r\n    };\r\n\r\n    useEffect(()=>checkCompleted());\r\n\r\n//\r\n    if(registered === true) {\r\n        return <div className='d-flex flex-column justify-content-center align-items-center auth'>\r\n            <h3>Thank you for registration. You can login now!</h3>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className='d-flex flex-column justify-content-center align-items-center auth'>\r\n            <h3 className='mb-5 text-center'>Thank you for choosing our app. Please register:</h3>\r\n            <form ref={formRef}>\r\n\r\n                <RegistrationInput validateType={userValidate.nickname}\r\n                                   validateCallback={(inputValue)=>checkUserExist('nickname',apiConnect.checkUsernameExist,inputValue)}\r\n                                   type='text'\r\n                                   name='nick'\r\n                                   label='Nickname'\r\n                                   onEnter = {()=>mailRef.current.focus()}\r\n                />\r\n                <RegistrationInput validateType={userValidate.mail}\r\n                                   validateCallback={(inputValue)=>checkUserExist('mail',apiConnect.checkUserMailExist,inputValue)}\r\n                                   type='email'\r\n                                   name='mail'\r\n                                   label='Email address'\r\n                                   ref={mailRef}\r\n                                   onEnter = {()=>passRef.current.focus()}\r\n                />\r\n\r\n                <RegistrationInput validateType={userValidate.pass}\r\n                                   validateCallback={onPassEnter}\r\n                                   type='password'\r\n                                   name='password'\r\n                                   label='Password'\r\n                                   ref={passRef}\r\n                                   onEnter = {()=>passRepeatRef.current.focus()}\r\n                />\r\n                <RegistrationInput validateType={userValidate.pass}\r\n                                   validateCallback={passCheck}\r\n                                   type='password'\r\n                                   name='PasswordCheck'\r\n                                   label='Repeat password'\r\n                                   ref={passRepeatRef}\r\n                                   onEnter = {()=>btnRef.current.focus()}\r\n                />\r\n\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={onSubmit} ref={btnRef} disabled={btnStatus}>Register</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Registration;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App/App\";\r\nimport \"./index.css\";\r\nimport Authorize from \"./components/Authorize/Authorize\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport Registration from \"./components/Registration/Registration\";\r\nimport { LoggedUser, UserProvider } from \"./Context/UserContext\";\r\n\r\nReactDOM.render(\r\n  <UserProvider value={new LoggedUser()}>\r\n    <Router>\r\n      <Route path=\"/\" component={Authorize} exact />\r\n      <Route path=\"/registration\" component={Registration} exact />\r\n      <Route path=\"/main\" component={App} exact />\r\n    </Router>\r\n  </UserProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}